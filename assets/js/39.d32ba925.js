(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{237:function(e,t,a){"use strict";a.r(t);var r=a(4),_=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"git-相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-相关","aria-hidden":"true"}},[e._v("#")]),e._v(" Git 相关")]),e._v(" "),a("h2",{attrs:{id:"git-的文件的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-的文件的生命周期","aria-hidden":"true"}},[e._v("#")]),e._v(" Git 的文件的生命周期")]),e._v(" "),a("p",[a("img",{attrs:{src:"http://qn-noter.yunxi.site/imagehost/6eamq.png",alt:"image-20200328100915404"}})]),e._v(" "),a("h2",{attrs:{id:"git-的工作区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-的工作区","aria-hidden":"true"}},[e._v("#")]),e._v(" Git 的工作区")]),e._v(" "),a("p",[a("img",{attrs:{src:"http://qn-noter.yunxi.site/imagehost/khw0i.png",alt:"image-20200328100941891"}})]),e._v(" "),a("h2",{attrs:{id:"merge-和-rebase-的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge-和-rebase-的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" merge 和 rebase 的区别？")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5af26c4d5188256728605809#heading-0",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge","aria-hidden":"true"}},[e._v("#")]),e._v(" merge")]),e._v(" "),a("p",[a("code",[e._v("git merge")]),e._v(" 的使用方法很简单，假如你想将分支 "),a("code",[e._v("feature")]),e._v(" 合并到分支 "),a("code",[e._v("master")]),e._v("，那么只需执行如下两步即可：")]),e._v(" "),a("ul",[a("li",[e._v("将分支切换到 "),a("code",[e._v("master")]),e._v(" 上去："),a("code",[e._v("git checkout master")])]),e._v(" "),a("li",[e._v("将分支 "),a("code",[e._v("feature")]),e._v(" 合并到当前分支（即 "),a("code",[e._v("master")]),e._v(" 分支）上："),a("code",[e._v("git merge feature")])])]),e._v(" "),a("p",[a("img",{attrs:{src:"http://qn-noter.yunxi.site/imagehost/fral1.png",alt:"image-20200328101406608"}})]),e._v(" "),a("p",[e._v("如上图所示，"),a("code",[e._v("git merge")]),e._v(" 有如下特点：")]),e._v(" "),a("ul",[a("li",[e._v("只处理一次冲突")]),e._v(" "),a("li",[e._v("引入了一次合并的历史记录，合并后的所有 "),a("code",[e._v("commit")]),e._v(" 会按照提交时间从旧到新排列")]),e._v(" "),a("li",[e._v("所有的过程信息更多，可能会提高之后查找问题的难度")])]),e._v(" "),a("p",[e._v("为什么讲 "),a("code",[e._v("git merge")]),e._v(" 提交的信息过多可能会影响查找问题的难度呢？因为在一个大型项目中，单纯依靠 "),a("code",[e._v("git merge")]),e._v(" 方法进行合并，会保存所有的提交过程的信息：引出分支，合并分支，在分支上再引出新的分支等等，类似这样的操作一多，提交历史信息就会显得杂乱，这时如果有问题需要查找就会比较困难了。")]),e._v(" "),a("h3",{attrs:{id:"rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rebase","aria-hidden":"true"}},[e._v("#")]),e._v(" rebase")]),e._v(" "),a("p",[e._v("与 "),a("code",[e._v("git merge")]),e._v(" 一致，"),a("code",[e._v("git rebase")]),e._v(" 的目的也是将一个分支的更改并入到另外一个分支中去。")]),e._v(" "),a("p",[a("img",{attrs:{src:"http://qn-noter.yunxi.site/imagehost/mx5he.png-style1",alt:"image-20200328105022835"}})]),e._v(" "),a("p",[e._v("如上图所示，他的主要特点如下：")]),e._v(" "),a("ul",[a("li",[e._v("改变当前分支从 "),a("code",[e._v("master")]),e._v(" 上拉出分支的位置")]),e._v(" "),a("li",[e._v("没有多余的合并历史的记录，且合并后的 "),a("code",[e._v("commit")]),e._v(" 顺序不一定按照 "),a("code",[e._v("commit")]),e._v(" 的提交时间排列")]),e._v(" "),a("li",[e._v("可能会多次解决同一个地方的冲突（有 "),a("code",[e._v("squash")]),e._v(" 来解决）")]),e._v(" "),a("li",[e._v("更清爽一些，"),a("code",[e._v("master")]),e._v(" 分支上每个 "),a("code",[e._v("commit")]),e._v(" 点都是相对独立完整的功能单元")])]),e._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("p",[e._v("当需要保留详细的合并信息的时候建议使用"),a("code",[e._v("git merge")]),e._v("，特别是需要将分支合并进入"),a("code",[e._v("master")]),e._v("分支时；当发现自己修改某个功能时，频繁进行了"),a("code",[e._v("git commit")]),e._v("提交时，发现其实过多的提交信息没有必要时，可以尝试"),a("code",[e._v("git rebase")]),e._v("。")])])},[],!1,null,null,null);t.default=_.exports}}]);