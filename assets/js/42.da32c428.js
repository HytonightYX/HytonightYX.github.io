(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{239:function(t,a,s){"use strict";s.r(a);var e=s(4),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"optional-chaining-loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-chaining-loader","aria-hidden":"true"}},[t._v("#")]),t._v(" optional-chaining-loader")]),t._v(" "),s("h2",{attrs:{id:"_1-可选链是什么？解决了什么问题？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-可选链是什么？解决了什么问题？","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.可选链是什么？解决了什么问题？")]),t._v(" "),s("p",[t._v("根据 "),s("a",{attrs:{href:"%5Bhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/%E5%8F%AF%E9%80%89%E9%93%BE%5D(https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/%E5%8F%AF%E9%80%89%E9%93%BE)"}},[t._v("MDN 文档")])]),t._v(" "),s("blockquote",[s("p",[t._v("可选链操作符"),s("code",[t._v("?.")]),t._v("能够去读取一个被连接对象的深层次的属性的值而无需明确校验链条上每一个引用的有效性。"),s("code",[t._v("?.")]),t._v("运算符功能类似于"),s("code",[t._v(".")]),t._v("运算符，不同之处在于如果链条上的一个引用是"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/nullish",target:"_blank",rel:"noopener noreferrer"}},[t._v("nullish"),s("OutboundLink")],1),t._v(" ("),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/null",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("null")]),s("OutboundLink")],1),t._v(" 或 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("undefined")]),s("OutboundLink")],1),t._v(")，"),s("code",[t._v(".")]),t._v("操作符会引起一个错误，"),s("code",[t._v("?.")]),t._v("操作符取而代之的是会按照短路计算的方式返回一个 undefined。当"),s("code",[t._v("?.")]),t._v("操作符用于函数调用时，如果该函数不存在也将会返回 undefined。")]),t._v(" "),s("p",[t._v("当访问链条上可能存在的属性却不存在时，"),s("code",[t._v("?.")]),t._v("操作符将会使表达式更短和更简单。当不能保证哪些属性是必需的时，"),s("code",[t._v("?.")]),t._v("操作符对于探索一个对象的内容是很有帮助的。")])]),t._v(" "),s("p",[t._v("例子")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" adventurer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Alice'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Dinah'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dogName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" adventurer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dog"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dogName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: undefined")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("adventurer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someNonExistentMethod"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expected output: undefined")]),t._v("\n")])])]),s("p",[t._v("更多语法可以参见 "),s("a",{attrs:{href:"https://github.com/tc39/proposal-optional-chaining#syntax",target:"_blank",rel:"noopener noreferrer"}},[t._v("TC39"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_2-思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-思路","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.思路")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" baz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要转换成 obj && obj.foo && obj.foo.bar && obj.foo.bar.baz")]),t._v("\n")])])]),s("p",[t._v("观察上面两个例子，可以发现三点")]),t._v(" "),s("p",[t._v("（1） 对于 "),s("code",[t._v("x?.y")]),t._v("，相当于 "),s("code",[t._v("x && x.y")])]),t._v(" "),s("p",[t._v("（2） 对于 "),s("code",[t._v("x.y?.z")]),t._v("，则相当于 "),s("code",[t._v("x?.y?.z")]),t._v("，也就是"),s("code",[t._v("x && x.y && x.y.z")]),t._v("，这是相比 "),s("a",{attrs:{href:"https://github.com/tc39/proposal-optional-chaining#faq",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("TC39")]),s("OutboundLink")],1),t._v(" 不一样的地方")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("In a deeply nested chain like "),s("code",[t._v("a?.b?.c")]),t._v(", why should I write "),s("code",[t._v("?.")]),t._v(" at each level? Should I not be able to write the operator only once for the whole chain?")])]),t._v(" "),s("p",[t._v("By design, we want the developer to be able to mark each place that they expect to be null/undefined, and only those. Indeed, we believe that an unexpected null/undefined value, being a symptom of a probable bug, should be reported as a TypeError rather than swept under the rug.")])]),t._v(" "),s("p",[t._v("（3） 对于函数，"),s("code",[t._v("fn?.()")]),t._v(" 相当于 "),s("code",[t._v("fn && fn()")])]),t._v(" "),s("h3",{attrs:{id:"webpack-loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack-loader","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack loader")]),t._v(" "),s("p",[t._v("本质还是字符串的修改，只要拿到代码字符串就可以做，那么写一个 "),s("code",[t._v("webpack-loader")]),t._v(" 做正则匹配也可行。")]),t._v(" "),s("h3",{attrs:{id:"babel-loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-loader","aria-hidden":"true"}},[t._v("#")]),t._v(" babel loader")]),t._v(" "),s("p",[t._v("可选链是 ES-next 的内容，容易想到用 "),s("code",[t._v("babel")]),t._v("。因此写一个 "),s("code",[t._v("babel loader")]),t._v(" 操作 AST 应该也可以做。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/babel/babel/blob/master/packages/babel-plugin-proposal-optional-chaining/src/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("@babel/plugin-proposal-optional-chaining"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_3-webpack-loader-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-webpack-loader-实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.webpack loader 实现")]),t._v(" "),s("h3",{attrs:{id:"正则匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则匹配","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则匹配")]),t._v(" "),s("p",[t._v("之后，我们本质上修改字符串就可以达到这个效果，请出"),s("a",{attrs:{href:"regex101"}},[t._v("正则表达式")]),t._v("就完事了。")]),t._v(" "),s("h5",{attrs:{id:"匹配变量和-号，变量可以是字母、数字、美元符号-和下划线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配变量和-号，变量可以是字母、数字、美元符号-和下划线","aria-hidden":"true"}},[t._v("#")]),t._v(" 匹配变量和.号，变量可以是字母、数字、美元符号("),s("code",[t._v("$")]),t._v(")和下划线")]),t._v(" "),s("p",[s("code",[t._v("[\\w\\$_\\.]")])]),t._v(" "),s("h5",{attrs:{id:"匹配-和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配-和","aria-hidden":"true"}},[t._v("#")]),t._v(" 匹配.和?")]),t._v(" "),s("p",[s("code",[t._v("\\?\\.")])]),t._v(" "),s("h5",{attrs:{id:"匹配函数后跟的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配函数后跟的","aria-hidden":"true"}},[t._v("#")]),t._v(" 匹配函数后跟的"),s("code",[t._v("(")]),t._v(" , "),s("code",[t._v("[")])]),t._v(" "),s("p",[t._v("判断是否为函数 "),s("code",[t._v("fn?.()")]),t._v(", 数组 "),s("code",[t._v("arr?.[1]")]),t._v(" 或对象属性 "),s("code",[t._v("obj?.['name']")])]),t._v(" "),s("p",[s("code",[t._v("[(\\(\\[]?")])]),t._v(" "),s("p",[t._v("最终得到")]),t._v(" "),s("p",[s("code",[t._v("/([\\w\\$_\\?\\.]+\\?\\.)[(\\(\\[]?/g")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://qn-noter.yunxi.site/imagehost/0wyn5.png",alt:"image-20200313101052251"}})]),t._v(" "),s("p",[t._v("根据 "),s("code",[t._v(".")]),t._v(" 或者 "),s("code",[t._v("?.")]),t._v(" 去拆开变量，最后把他们套娃一样套起来。")]),t._v(" "),s("p",[s("code",[t._v("x.y.z?. => x && x.y && x.y.z")])]),t._v(" "),s("p",[t._v("再判断一下结尾，如果有 "),s("code",[t._v("(")]),t._v(" 或 "),s("code",[t._v("[")]),t._v(" 则需要补上括号，否则补个 "),s("code",[t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * webpack loader\n * Optional Chain Transformer\n *\n * @param {string} source 待处理代码字符串\n * @author Husiyuan\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("optionalChain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("replacer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否为函数 fn?.(), 数组arr?.[1] 或对象属性, obj?.['name']")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" endBrackets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" haveEndBrackets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" endBrackets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" endBrackets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'['")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去除末尾 ( 或 [，切分变量")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" varList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[\\[\\(]/g")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.|\\?\\./")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去除末尾空字符")]),t._v("\n    varList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" defaultListIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" varList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("defaultListIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ret\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始拼接操作")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" varList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      pre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pre "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" varList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' && '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" pre\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' && '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" pre\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("haveEndBrackets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" endBrackets "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/([\\w\\$_\\?\\.]+\\?\\.)[(\\(\\[]?/g")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replacer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=n.exports}}]);